#!/bin/bash
#
# Script to be run right after the set up of internet connection
#
# This script does
# - ssh tunneling between nemo/LAL machines
#
# Author(s)     : Xavier Garrido <<garrido@lal.in2p3.fr>>
# Creation date : 2013-01-13
# Last modified : 2013-10-30
#
# 2013-10-30 : Changing name to npu
#

appname="npu"

function send_notification ()
{
    local icon="stock_dialog-info"
    case $1 in
	info)
	    icon="stock_dialog-info"
	    ;;
	warning)
	    icon="stock_dialog-warning"
	    ;;
	error)
	    icon="stock_dialog-error"
	    ;;
    esac
    sudo -u garrido notify-send -t 2000 -i ${icon} "${appname}" "$2"
    return 0
}

function ping_machine ()
{
    ssh garrido@lx3.lal.in2p3.fr "ping -c 1 ${machine_name} > /dev/null"
    if [ $? -ne 0 ]; then
        send_notification "warning" "${machine_name} is not connected"
        return 1
    fi
    return 0
}

function kill_ssh_tunnel ()
{
    local is_setup=$(ps aux | grep "$ssh_port:localhost:22" \
        | grep -v grep | awk '{print $2}')
    if [ "x${is_setup}" != "x" ]; then
        for id in ${is_setup}; do kill -9 $id;done
    fi

    ssh garrido@lx3.lal.in2p3.fr \
        "ps -edf | grep ssh | grep ${machine_name} | grep -v grep | grep -v tcsh | awk '{print \"kill -9\", \$2}' | sh"
    return 0
}

function set_remote_tunnel ()
{
    ssh -f -L ${ssh_port}:localhost:${ssh_port} garrido@lx3.lal.in2p3.fr \
        "ssh -X -f -N -L ${ssh_port}:localhost:22 ${machine_name}" > /dev/null 2>&1 &
    return 0
}

function set_local_tunnel ()
{
    sudo -u garrido ssh -X -f -N -L \
        ${ssh_port}:localhost:22 ${machine_name} > /dev/null 2>&1
    return 0
}

function set_ssh_tunnel ()
{
    kill_ssh_tunnel
    if ! ping_machine; then
        return 1
    fi

    local name_server=$(cat /etc/resolv.conf | \
        grep --max-count=1 nameserver | cut -d' ' -f2)
    if [ ${name_server} = 192.168.1.1 ]; then
        set_remote_tunnel
    else
        set_local_tunnel
    fi

    send_notification "info" "${machine_name} tunnel done on port ${ssh_port}"
    return 0
}

function main ()
{
    local tmp_dir=/tmp/npu.d
    mkdir -p ${tmp_dir}
    local tmp_file=${tmp_dir}/ports
    touch ${tmp_file}

    (
        machine_name=$1
        ssh_port=$(cat ${tmp_file} | grep ${machine_name} | cut -d' ' -f2)
        if [ -x ${ssh_port} ]; then
            last_port=$(cat ${tmp_file} | tail -1 | cut -d ' ' -f2)
            if [ -x ${last_port} ]; then
                ssh_port=6261
            else
                ssh_port=$((last_port + 1))
            fi
        fi
        echo "${machine_name} ${ssh_port}" >> ${tmp_file}
        set_ssh_tunnel
    )
    return 0
}

main "$@"
if [ $? -ne 0 ]; then
    send_notification "error" \
        "Something gets wrong with SSH tunelling"
    return 1
else
    send_notification "info" \
        "SSH tunneling established"
fi
